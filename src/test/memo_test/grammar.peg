S   := expr=E0 _ $
       .value = number { return this.expr.value; }

E0  := a=E1 _ op='\+|-' b=E0
      .value=number {
          return this.op === "+"
              ?  this.a.value + this.b.value
              :  this.a.value - this.b.value;
      }
     | E1

E1  := a=ATOM _ op='\*|\/' b=E1
      .value=number {
          return this.op === "*"
              ?  this.a.value * this.b.value
              :  this.a.value / this.b.value;
      }
      | ATOM

ATOM := _ val=INT
        .value=number { return this.val.value; }
        | _ '\(' val=E0 _ '\)'
        .value=number { return this.val.value; }
INT  := val='[0-9]+'
        .value=number { return parseInt(this.val); }
_    := '\s*'
